name: 🚀 Master Branch Deploy

on:
  push:
    branches: [ master ]
  workflow_dispatch:  # 수동 실행 옵션

permissions:
  contents: read

jobs:
  test:
    name: 🧪 Quick Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        
    - name: 🔧 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        
    - name: 🔍 Quick import test
      run: |
        python -c "import vertex_ai_imagen; print(f'✅ 버전: {vertex_ai_imagen.__version__}')"
        python -c "from vertex_ai_imagen import ImagenClient; print('✅ ImagenClient import 성공')"
        
    - name: 🧪 Basic functionality test
      run: |
        python -c "
        from vertex_ai_imagen import ImagenClient, ImageRequest
        print('✅ 모든 클래스 import 성공')
        
        # 기본 객체 생성 테스트
        try:
            request = ImageRequest(prompt='test', model='imagen-3.0-generate-001')
            print('✅ ImageRequest 객체 생성 성공')
        except Exception as e:
            print(f'❌ ImageRequest 생성 실패: {e}')
            exit(1)
        "

  build:
    name: 📦 Build Package
    needs: [test]
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
        
    - name: 🔧 Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: 🏗️ Build package
      run: python -m build
      
    - name: 🔍 Check package
      run: twine check dist/*
      
    - name: 📤 Upload distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
        
  deploy-testpypi:
    name: 🧪 Deploy to TestPyPI
    needs: [build]
    runs-on: ubuntu-latest
    
    environment:
      name: testpypi
      url: https://test.pypi.org/p/vertex-ai-imagen
      
    permissions:
      id-token: write  # IMPORTANT: Trusted Publishing용 필수
      
    steps:
    - name: 📥 Download distribution packages
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
        
    - name: 🧪 Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
    
    - name: 🎉 Deployment Success
      run: |
        echo "🎉 TestPyPI 배포 완료!"
        echo "📦 패키지 확인: https://test.pypi.org/project/vertex-ai-imagen/"
        echo "🔧 테스트 설치: pip install -i https://test.pypi.org/simple/ vertex-ai-imagen" 