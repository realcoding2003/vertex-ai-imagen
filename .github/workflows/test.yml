name: 🧪 Tests and Quality Checks

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  test:
    name: 🐍 Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: 🔧 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov
        
    - name: 🔍 Import test
      run: |
        python -c "import vertex_ai_imagen; print(f'✅ 버전: {vertex_ai_imagen.__version__}')"
        python -c "from vertex_ai_imagen import ImagenClient; print('✅ ImagenClient import 성공')"
        
    - name: 🧪 Run basic tests
      run: |
        python -c "
        from vertex_ai_imagen import ImagenClient, ImageRequest
        print('✅ 모든 클래스 import 성공')
        
        # 기본 객체 생성 테스트
        try:
            request = ImageRequest(prompt='test', model='imagen-3.0-generate-001')
            print('✅ ImageRequest 객체 생성 성공')
        except Exception as e:
            print(f'❌ ImageRequest 생성 실패: {e}')
            exit(1)
        "

  lint:
    name: 🔍 Code Quality Checks  
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
        
    - name: 🔧 Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
        
    - name: 🖤 Check code formatting with black
      run: |
        black --check --diff src/ || echo "⚠️ Black formatting issues found (not blocking)"
        
    - name: 📦 Check import sorting with isort
      run: |
        isort --check-only --diff src/ || echo "⚠️ Import sorting issues found (not blocking)"
        
    - name: 🔍 Check code style with flake8
      run: |
        flake8 src/ --max-line-length=88 --extend-ignore=E203,W503 || echo "⚠️ Style issues found (not blocking)"

  build-test:
    name: 🏗️ Build Test
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
        
    - name: 🔧 Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: 🏗️ Build package
      run: python -m build
      
    - name: 🔍 Check package
      run: twine check dist/*
      
    - name: 📊 Show build results
      run: |
        echo "📦 빌드된 파일들:"
        ls -la dist/
        echo ""
        echo "📏 파일 크기:"
        du -h dist/* 